// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

package com.bapis.bilibili.app.dynamic.v1;

/**
 * <pre>
 * SVideoReq 小视频连播页请求参数
 * </pre>
 *
 * Protobuf type {@code bilibili.app.dynamic.v1.SVideoReq}
 */
public final class SVideoReq extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bilibili.app.dynamic.v1.SVideoReq)
    SVideoReqOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SVideoReq.newBuilder() to construct.
  private SVideoReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SVideoReq() {
    type_ = 0;
    offset_ = "";
    spmid_ = "";
    fromSpmid_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new SVideoReq();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SVideoReq(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            oid_ = input.readInt64();
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            offset_ = s;
            break;
          }
          case 32: {

            qn_ = input.readInt32();
            break;
          }
          case 40: {

            fnver_ = input.readInt32();
            break;
          }
          case 48: {

            fnval_ = input.readInt32();
            break;
          }
          case 56: {

            forceHost_ = input.readInt32();
            break;
          }
          case 64: {

            fourk_ = input.readInt32();
            break;
          }
          case 74: {
            String s = input.readStringRequireUtf8();

            spmid_ = s;
            break;
          }
          case 82: {
            String s = input.readStringRequireUtf8();

            fromSpmid_ = s;
            break;
          }
          case 90: {
            PlayerPreloadParams.Builder subBuilder = null;
            if (playerPreload_ != null) {
              subBuilder = playerPreload_.toBuilder();
            }
            playerPreload_ = input.readMessage(PlayerPreloadParams.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(playerPreload_);
              playerPreload_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return DynamicOuterClass.internal_static_bilibili_app_dynamic_v1_SVideoReq_descriptor;
  }

  @Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return DynamicOuterClass.internal_static_bilibili_app_dynamic_v1_SVideoReq_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            SVideoReq.class, Builder.class);
  }

  public static final int OID_FIELD_NUMBER = 1;
  private long oid_;
  /**
   * <pre>
   * 当前素材的id，外部点击进来要传，联播页内翻页不用传（如动态id/热门分类id/热词id）
   * </pre>
   *
   * <code>int64 oid = 1;</code>
   * @return The oid.
   */
  @Override
  public long getOid() {
    return oid_;
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private int type_;
  /**
   * <pre>
   * 当前素材类型，动态=1（如果有oid则必传）热门分类=2 热点聚合=3
   * </pre>
   *
   * <code>.bilibili.app.dynamic.v1.SVideoType type = 2;</code>
   * @return The enum numeric value on the wire for type.
   */
  @Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * 当前素材类型，动态=1（如果有oid则必传）热门分类=2 热点聚合=3
   * </pre>
   *
   * <code>.bilibili.app.dynamic.v1.SVideoType type = 2;</code>
   * @return The type.
   */
  @Override public SVideoType getType() {
    @SuppressWarnings("deprecation")
    SVideoType result = SVideoType.valueOf(type_);
    return result == null ? SVideoType.UNRECOGNIZED : result;
  }

  public static final int OFFSET_FIELD_NUMBER = 3;
  private volatile Object offset_;
  /**
   * <pre>
   * 首页不需要传，翻页透传上次结果的offset
   * </pre>
   *
   * <code>string offset = 3;</code>
   * @return The offset.
   */
  @Override
  public String getOffset() {
    Object ref = offset_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      offset_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 首页不需要传，翻页透传上次结果的offset
   * </pre>
   *
   * <code>string offset = 3;</code>
   * @return The bytes for offset.
   */
  @Override
  public com.google.protobuf.ByteString
      getOffsetBytes() {
    Object ref = offset_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      offset_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int QN_FIELD_NUMBER = 4;
  private int qn_;
  /**
   * <pre>
   * 秒开清晰度（秒开用）
   * </pre>
   *
   * <code>int32 qn = 4;</code>
   * @return The qn.
   */
  @Override
  public int getQn() {
    return qn_;
  }

  public static final int FNVER_FIELD_NUMBER = 5;
  private int fnver_;
  /**
   * <pre>
   * 功能版本号（秒开用）
   * </pre>
   *
   * <code>int32 fnver = 5;</code>
   * @return The fnver.
   */
  @Override
  public int getFnver() {
    return fnver_;
  }

  public static final int FNVAL_FIELD_NUMBER = 6;
  private int fnval_;
  /**
   * <pre>
   * 功能标识（秒开用）
   * </pre>
   *
   * <code>int32 fnval = 6;</code>
   * @return The fnval.
   */
  @Override
  public int getFnval() {
    return fnval_;
  }

  public static final int FORCE_HOST_FIELD_NUMBER = 7;
  private int forceHost_;
  /**
   * <pre>
   * 返回url是否强制使用域名（秒开用）
   * </pre>
   *
   * <code>int32 force_host = 7;</code>
   * @return The forceHost.
   */
  @Override
  public int getForceHost() {
    return forceHost_;
  }

  public static final int FOURK_FIELD_NUMBER = 8;
  private int fourk_;
  /**
   * <pre>
   * 是否需要4k视频，fourk=1 表示需要，其他表示不需要
   * </pre>
   *
   * <code>int32 fourk = 8;</code>
   * @return The fourk.
   */
  @Override
  public int getFourk() {
    return fourk_;
  }

  public static final int SPMID_FIELD_NUMBER = 9;
  private volatile Object spmid_;
  /**
   * <pre>
   * spmid 当前页面
   * </pre>
   *
   * <code>string spmid = 9;</code>
   * @return The spmid.
   */
  @Override
  public String getSpmid() {
    Object ref = spmid_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      spmid_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * spmid 当前页面
   * </pre>
   *
   * <code>string spmid = 9;</code>
   * @return The bytes for spmid.
   */
  @Override
  public com.google.protobuf.ByteString
      getSpmidBytes() {
    Object ref = spmid_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      spmid_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FROM_SPMID_FIELD_NUMBER = 10;
  private volatile Object fromSpmid_;
  /**
   * <pre>
   * from_spmid 上级页面
   * </pre>
   *
   * <code>string from_spmid = 10;</code>
   * @return The fromSpmid.
   */
  @Override
  public String getFromSpmid() {
    Object ref = fromSpmid_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      fromSpmid_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * from_spmid 上级页面
   * </pre>
   *
   * <code>string from_spmid = 10;</code>
   * @return The bytes for fromSpmid.
   */
  @Override
  public com.google.protobuf.ByteString
      getFromSpmidBytes() {
    Object ref = fromSpmid_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      fromSpmid_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLAYER_PRELOAD_FIELD_NUMBER = 11;
  private PlayerPreloadParams playerPreload_;
  /**
   * <pre>
   * 秒开参数
   * </pre>
   *
   * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
   * @return Whether the playerPreload field is set.
   */
  @Override
  public boolean hasPlayerPreload() {
    return playerPreload_ != null;
  }
  /**
   * <pre>
   * 秒开参数
   * </pre>
   *
   * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
   * @return The playerPreload.
   */
  @Override
  public PlayerPreloadParams getPlayerPreload() {
    return playerPreload_ == null ? PlayerPreloadParams.getDefaultInstance() : playerPreload_;
  }
  /**
   * <pre>
   * 秒开参数
   * </pre>
   *
   * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
   */
  @Override
  public PlayerPreloadParamsOrBuilder getPlayerPreloadOrBuilder() {
    return getPlayerPreload();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (oid_ != 0L) {
      output.writeInt64(1, oid_);
    }
    if (type_ != SVideoType.TypeNone.getNumber()) {
      output.writeEnum(2, type_);
    }
    if (!getOffsetBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, offset_);
    }
    if (qn_ != 0) {
      output.writeInt32(4, qn_);
    }
    if (fnver_ != 0) {
      output.writeInt32(5, fnver_);
    }
    if (fnval_ != 0) {
      output.writeInt32(6, fnval_);
    }
    if (forceHost_ != 0) {
      output.writeInt32(7, forceHost_);
    }
    if (fourk_ != 0) {
      output.writeInt32(8, fourk_);
    }
    if (!getSpmidBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, spmid_);
    }
    if (!getFromSpmidBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, fromSpmid_);
    }
    if (playerPreload_ != null) {
      output.writeMessage(11, getPlayerPreload());
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (oid_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, oid_);
    }
    if (type_ != SVideoType.TypeNone.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, type_);
    }
    if (!getOffsetBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, offset_);
    }
    if (qn_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, qn_);
    }
    if (fnver_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, fnver_);
    }
    if (fnval_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, fnval_);
    }
    if (forceHost_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, forceHost_);
    }
    if (fourk_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, fourk_);
    }
    if (!getSpmidBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, spmid_);
    }
    if (!getFromSpmidBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, fromSpmid_);
    }
    if (playerPreload_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getPlayerPreload());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof SVideoReq)) {
      return super.equals(obj);
    }
    SVideoReq other = (SVideoReq) obj;

    if (getOid()
        != other.getOid()) return false;
    if (type_ != other.type_) return false;
    if (!getOffset()
        .equals(other.getOffset())) return false;
    if (getQn()
        != other.getQn()) return false;
    if (getFnver()
        != other.getFnver()) return false;
    if (getFnval()
        != other.getFnval()) return false;
    if (getForceHost()
        != other.getForceHost()) return false;
    if (getFourk()
        != other.getFourk()) return false;
    if (!getSpmid()
        .equals(other.getSpmid())) return false;
    if (!getFromSpmid()
        .equals(other.getFromSpmid())) return false;
    if (hasPlayerPreload() != other.hasPlayerPreload()) return false;
    if (hasPlayerPreload()) {
      if (!getPlayerPreload()
          .equals(other.getPlayerPreload())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + OID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOid());
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + OFFSET_FIELD_NUMBER;
    hash = (53 * hash) + getOffset().hashCode();
    hash = (37 * hash) + QN_FIELD_NUMBER;
    hash = (53 * hash) + getQn();
    hash = (37 * hash) + FNVER_FIELD_NUMBER;
    hash = (53 * hash) + getFnver();
    hash = (37 * hash) + FNVAL_FIELD_NUMBER;
    hash = (53 * hash) + getFnval();
    hash = (37 * hash) + FORCE_HOST_FIELD_NUMBER;
    hash = (53 * hash) + getForceHost();
    hash = (37 * hash) + FOURK_FIELD_NUMBER;
    hash = (53 * hash) + getFourk();
    hash = (37 * hash) + SPMID_FIELD_NUMBER;
    hash = (53 * hash) + getSpmid().hashCode();
    hash = (37 * hash) + FROM_SPMID_FIELD_NUMBER;
    hash = (53 * hash) + getFromSpmid().hashCode();
    if (hasPlayerPreload()) {
      hash = (37 * hash) + PLAYER_PRELOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerPreload().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static SVideoReq parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SVideoReq parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SVideoReq parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SVideoReq parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SVideoReq parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SVideoReq parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SVideoReq parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static SVideoReq parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static SVideoReq parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static SVideoReq parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static SVideoReq parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static SVideoReq parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(SVideoReq prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * SVideoReq 小视频连播页请求参数
   * </pre>
   *
   * Protobuf type {@code bilibili.app.dynamic.v1.SVideoReq}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bilibili.app.dynamic.v1.SVideoReq)
      SVideoReqOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DynamicOuterClass.internal_static_bilibili_app_dynamic_v1_SVideoReq_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DynamicOuterClass.internal_static_bilibili_app_dynamic_v1_SVideoReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SVideoReq.class, Builder.class);
    }

    // Construct using com.bapis.bilibili.app.dynamic.v1.SVideoReq.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      oid_ = 0L;

      type_ = 0;

      offset_ = "";

      qn_ = 0;

      fnver_ = 0;

      fnval_ = 0;

      forceHost_ = 0;

      fourk_ = 0;

      spmid_ = "";

      fromSpmid_ = "";

      if (playerPreloadBuilder_ == null) {
        playerPreload_ = null;
      } else {
        playerPreload_ = null;
        playerPreloadBuilder_ = null;
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return DynamicOuterClass.internal_static_bilibili_app_dynamic_v1_SVideoReq_descriptor;
    }

    @Override
    public SVideoReq getDefaultInstanceForType() {
      return SVideoReq.getDefaultInstance();
    }

    @Override
    public SVideoReq build() {
      SVideoReq result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public SVideoReq buildPartial() {
      SVideoReq result = new SVideoReq(this);
      result.oid_ = oid_;
      result.type_ = type_;
      result.offset_ = offset_;
      result.qn_ = qn_;
      result.fnver_ = fnver_;
      result.fnval_ = fnval_;
      result.forceHost_ = forceHost_;
      result.fourk_ = fourk_;
      result.spmid_ = spmid_;
      result.fromSpmid_ = fromSpmid_;
      if (playerPreloadBuilder_ == null) {
        result.playerPreload_ = playerPreload_;
      } else {
        result.playerPreload_ = playerPreloadBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof SVideoReq) {
        return mergeFrom((SVideoReq)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(SVideoReq other) {
      if (other == SVideoReq.getDefaultInstance()) return this;
      if (other.getOid() != 0L) {
        setOid(other.getOid());
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (!other.getOffset().isEmpty()) {
        offset_ = other.offset_;
        onChanged();
      }
      if (other.getQn() != 0) {
        setQn(other.getQn());
      }
      if (other.getFnver() != 0) {
        setFnver(other.getFnver());
      }
      if (other.getFnval() != 0) {
        setFnval(other.getFnval());
      }
      if (other.getForceHost() != 0) {
        setForceHost(other.getForceHost());
      }
      if (other.getFourk() != 0) {
        setFourk(other.getFourk());
      }
      if (!other.getSpmid().isEmpty()) {
        spmid_ = other.spmid_;
        onChanged();
      }
      if (!other.getFromSpmid().isEmpty()) {
        fromSpmid_ = other.fromSpmid_;
        onChanged();
      }
      if (other.hasPlayerPreload()) {
        mergePlayerPreload(other.getPlayerPreload());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      SVideoReq parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (SVideoReq) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long oid_ ;
    /**
     * <pre>
     * 当前素材的id，外部点击进来要传，联播页内翻页不用传（如动态id/热门分类id/热词id）
     * </pre>
     *
     * <code>int64 oid = 1;</code>
     * @return The oid.
     */
    @Override
    public long getOid() {
      return oid_;
    }
    /**
     * <pre>
     * 当前素材的id，外部点击进来要传，联播页内翻页不用传（如动态id/热门分类id/热词id）
     * </pre>
     *
     * <code>int64 oid = 1;</code>
     * @param value The oid to set.
     * @return This builder for chaining.
     */
    public Builder setOid(long value) {
      
      oid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 当前素材的id，外部点击进来要传，联播页内翻页不用传（如动态id/热门分类id/热词id）
     * </pre>
     *
     * <code>int64 oid = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearOid() {
      
      oid_ = 0L;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <pre>
     * 当前素材类型，动态=1（如果有oid则必传）热门分类=2 热点聚合=3
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.SVideoType type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    @Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * 当前素材类型，动态=1（如果有oid则必传）热门分类=2 热点聚合=3
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.SVideoType type = 2;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 当前素材类型，动态=1（如果有oid则必传）热门分类=2 热点聚合=3
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.SVideoType type = 2;</code>
     * @return The type.
     */
    @Override
    public SVideoType getType() {
      @SuppressWarnings("deprecation")
      SVideoType result = SVideoType.valueOf(type_);
      return result == null ? SVideoType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * 当前素材类型，动态=1（如果有oid则必传）热门分类=2 热点聚合=3
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.SVideoType type = 2;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(SVideoType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 当前素材类型，动态=1（如果有oid则必传）热门分类=2 热点聚合=3
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.SVideoType type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private Object offset_ = "";
    /**
     * <pre>
     * 首页不需要传，翻页透传上次结果的offset
     * </pre>
     *
     * <code>string offset = 3;</code>
     * @return The offset.
     */
    public String getOffset() {
      Object ref = offset_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        offset_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * 首页不需要传，翻页透传上次结果的offset
     * </pre>
     *
     * <code>string offset = 3;</code>
     * @return The bytes for offset.
     */
    public com.google.protobuf.ByteString
        getOffsetBytes() {
      Object ref = offset_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        offset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 首页不需要传，翻页透传上次结果的offset
     * </pre>
     *
     * <code>string offset = 3;</code>
     * @param value The offset to set.
     * @return This builder for chaining.
     */
    public Builder setOffset(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      offset_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 首页不需要传，翻页透传上次结果的offset
     * </pre>
     *
     * <code>string offset = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearOffset() {
      
      offset_ = getDefaultInstance().getOffset();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 首页不需要传，翻页透传上次结果的offset
     * </pre>
     *
     * <code>string offset = 3;</code>
     * @param value The bytes for offset to set.
     * @return This builder for chaining.
     */
    public Builder setOffsetBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      offset_ = value;
      onChanged();
      return this;
    }

    private int qn_ ;
    /**
     * <pre>
     * 秒开清晰度（秒开用）
     * </pre>
     *
     * <code>int32 qn = 4;</code>
     * @return The qn.
     */
    @Override
    public int getQn() {
      return qn_;
    }
    /**
     * <pre>
     * 秒开清晰度（秒开用）
     * </pre>
     *
     * <code>int32 qn = 4;</code>
     * @param value The qn to set.
     * @return This builder for chaining.
     */
    public Builder setQn(int value) {
      
      qn_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 秒开清晰度（秒开用）
     * </pre>
     *
     * <code>int32 qn = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearQn() {
      
      qn_ = 0;
      onChanged();
      return this;
    }

    private int fnver_ ;
    /**
     * <pre>
     * 功能版本号（秒开用）
     * </pre>
     *
     * <code>int32 fnver = 5;</code>
     * @return The fnver.
     */
    @Override
    public int getFnver() {
      return fnver_;
    }
    /**
     * <pre>
     * 功能版本号（秒开用）
     * </pre>
     *
     * <code>int32 fnver = 5;</code>
     * @param value The fnver to set.
     * @return This builder for chaining.
     */
    public Builder setFnver(int value) {
      
      fnver_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 功能版本号（秒开用）
     * </pre>
     *
     * <code>int32 fnver = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFnver() {
      
      fnver_ = 0;
      onChanged();
      return this;
    }

    private int fnval_ ;
    /**
     * <pre>
     * 功能标识（秒开用）
     * </pre>
     *
     * <code>int32 fnval = 6;</code>
     * @return The fnval.
     */
    @Override
    public int getFnval() {
      return fnval_;
    }
    /**
     * <pre>
     * 功能标识（秒开用）
     * </pre>
     *
     * <code>int32 fnval = 6;</code>
     * @param value The fnval to set.
     * @return This builder for chaining.
     */
    public Builder setFnval(int value) {
      
      fnval_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 功能标识（秒开用）
     * </pre>
     *
     * <code>int32 fnval = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearFnval() {
      
      fnval_ = 0;
      onChanged();
      return this;
    }

    private int forceHost_ ;
    /**
     * <pre>
     * 返回url是否强制使用域名（秒开用）
     * </pre>
     *
     * <code>int32 force_host = 7;</code>
     * @return The forceHost.
     */
    @Override
    public int getForceHost() {
      return forceHost_;
    }
    /**
     * <pre>
     * 返回url是否强制使用域名（秒开用）
     * </pre>
     *
     * <code>int32 force_host = 7;</code>
     * @param value The forceHost to set.
     * @return This builder for chaining.
     */
    public Builder setForceHost(int value) {
      
      forceHost_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 返回url是否强制使用域名（秒开用）
     * </pre>
     *
     * <code>int32 force_host = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearForceHost() {
      
      forceHost_ = 0;
      onChanged();
      return this;
    }

    private int fourk_ ;
    /**
     * <pre>
     * 是否需要4k视频，fourk=1 表示需要，其他表示不需要
     * </pre>
     *
     * <code>int32 fourk = 8;</code>
     * @return The fourk.
     */
    @Override
    public int getFourk() {
      return fourk_;
    }
    /**
     * <pre>
     * 是否需要4k视频，fourk=1 表示需要，其他表示不需要
     * </pre>
     *
     * <code>int32 fourk = 8;</code>
     * @param value The fourk to set.
     * @return This builder for chaining.
     */
    public Builder setFourk(int value) {
      
      fourk_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否需要4k视频，fourk=1 表示需要，其他表示不需要
     * </pre>
     *
     * <code>int32 fourk = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearFourk() {
      
      fourk_ = 0;
      onChanged();
      return this;
    }

    private Object spmid_ = "";
    /**
     * <pre>
     * spmid 当前页面
     * </pre>
     *
     * <code>string spmid = 9;</code>
     * @return The spmid.
     */
    public String getSpmid() {
      Object ref = spmid_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        spmid_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * spmid 当前页面
     * </pre>
     *
     * <code>string spmid = 9;</code>
     * @return The bytes for spmid.
     */
    public com.google.protobuf.ByteString
        getSpmidBytes() {
      Object ref = spmid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        spmid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * spmid 当前页面
     * </pre>
     *
     * <code>string spmid = 9;</code>
     * @param value The spmid to set.
     * @return This builder for chaining.
     */
    public Builder setSpmid(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      spmid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * spmid 当前页面
     * </pre>
     *
     * <code>string spmid = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearSpmid() {
      
      spmid_ = getDefaultInstance().getSpmid();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * spmid 当前页面
     * </pre>
     *
     * <code>string spmid = 9;</code>
     * @param value The bytes for spmid to set.
     * @return This builder for chaining.
     */
    public Builder setSpmidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      spmid_ = value;
      onChanged();
      return this;
    }

    private Object fromSpmid_ = "";
    /**
     * <pre>
     * from_spmid 上级页面
     * </pre>
     *
     * <code>string from_spmid = 10;</code>
     * @return The fromSpmid.
     */
    public String getFromSpmid() {
      Object ref = fromSpmid_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        fromSpmid_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * from_spmid 上级页面
     * </pre>
     *
     * <code>string from_spmid = 10;</code>
     * @return The bytes for fromSpmid.
     */
    public com.google.protobuf.ByteString
        getFromSpmidBytes() {
      Object ref = fromSpmid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        fromSpmid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * from_spmid 上级页面
     * </pre>
     *
     * <code>string from_spmid = 10;</code>
     * @param value The fromSpmid to set.
     * @return This builder for chaining.
     */
    public Builder setFromSpmid(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fromSpmid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * from_spmid 上级页面
     * </pre>
     *
     * <code>string from_spmid = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearFromSpmid() {
      
      fromSpmid_ = getDefaultInstance().getFromSpmid();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * from_spmid 上级页面
     * </pre>
     *
     * <code>string from_spmid = 10;</code>
     * @param value The bytes for fromSpmid to set.
     * @return This builder for chaining.
     */
    public Builder setFromSpmidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fromSpmid_ = value;
      onChanged();
      return this;
    }

    private PlayerPreloadParams playerPreload_;
    private com.google.protobuf.SingleFieldBuilderV3<
        PlayerPreloadParams, PlayerPreloadParams.Builder, PlayerPreloadParamsOrBuilder> playerPreloadBuilder_;
    /**
     * <pre>
     * 秒开参数
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
     * @return Whether the playerPreload field is set.
     */
    public boolean hasPlayerPreload() {
      return playerPreloadBuilder_ != null || playerPreload_ != null;
    }
    /**
     * <pre>
     * 秒开参数
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
     * @return The playerPreload.
     */
    public PlayerPreloadParams getPlayerPreload() {
      if (playerPreloadBuilder_ == null) {
        return playerPreload_ == null ? PlayerPreloadParams.getDefaultInstance() : playerPreload_;
      } else {
        return playerPreloadBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 秒开参数
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
     */
    public Builder setPlayerPreload(PlayerPreloadParams value) {
      if (playerPreloadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        playerPreload_ = value;
        onChanged();
      } else {
        playerPreloadBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 秒开参数
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
     */
    public Builder setPlayerPreload(
        PlayerPreloadParams.Builder builderForValue) {
      if (playerPreloadBuilder_ == null) {
        playerPreload_ = builderForValue.build();
        onChanged();
      } else {
        playerPreloadBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 秒开参数
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
     */
    public Builder mergePlayerPreload(PlayerPreloadParams value) {
      if (playerPreloadBuilder_ == null) {
        if (playerPreload_ != null) {
          playerPreload_ =
            PlayerPreloadParams.newBuilder(playerPreload_).mergeFrom(value).buildPartial();
        } else {
          playerPreload_ = value;
        }
        onChanged();
      } else {
        playerPreloadBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 秒开参数
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
     */
    public Builder clearPlayerPreload() {
      if (playerPreloadBuilder_ == null) {
        playerPreload_ = null;
        onChanged();
      } else {
        playerPreload_ = null;
        playerPreloadBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 秒开参数
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
     */
    public PlayerPreloadParams.Builder getPlayerPreloadBuilder() {
      
      onChanged();
      return getPlayerPreloadFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 秒开参数
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
     */
    public PlayerPreloadParamsOrBuilder getPlayerPreloadOrBuilder() {
      if (playerPreloadBuilder_ != null) {
        return playerPreloadBuilder_.getMessageOrBuilder();
      } else {
        return playerPreload_ == null ?
            PlayerPreloadParams.getDefaultInstance() : playerPreload_;
      }
    }
    /**
     * <pre>
     * 秒开参数
     * </pre>
     *
     * <code>.bilibili.app.dynamic.v1.PlayerPreloadParams player_preload = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        PlayerPreloadParams, PlayerPreloadParams.Builder, PlayerPreloadParamsOrBuilder>
        getPlayerPreloadFieldBuilder() {
      if (playerPreloadBuilder_ == null) {
        playerPreloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            PlayerPreloadParams, PlayerPreloadParams.Builder, PlayerPreloadParamsOrBuilder>(
                getPlayerPreload(),
                getParentForChildren(),
                isClean());
        playerPreload_ = null;
      }
      return playerPreloadBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bilibili.app.dynamic.v1.SVideoReq)
  }

  // @@protoc_insertion_point(class_scope:bilibili.app.dynamic.v1.SVideoReq)
  private static final SVideoReq DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new SVideoReq();
  }

  public static SVideoReq getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SVideoReq>
      PARSER = new com.google.protobuf.AbstractParser<SVideoReq>() {
    @Override
    public SVideoReq parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SVideoReq(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SVideoReq> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<SVideoReq> getParserForType() {
    return PARSER;
  }

  @Override
  public SVideoReq getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

